---
# tasks file for common
    # - name: Importing GPGKEY for enterprise linux repo
    #   shell: 'rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org'
    #   tags:
    #     - kernel

    # - name: Installing the EL repo
    #   shell: 'rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpm'
    #   tags:
    #     - kernel

    # - name: Upgrading the kernel
    #   yum:
    #     name: kernel-ml
    #     enablerepo: elrepo-kernel
    #     state: present
    #   tags:
    #     - kernel

    # - name: Rebooting and waiting for host to come back
    #   shell: sleep 2 && shutdown -r +1
    #   async: 1
    #   poll: 0
    #   sudo: true
    #   ignore_errors: true
    #   tags:
    #     - kernel
    
    # - name: waiting for server to come back
    #   local_action: wait_for host={{ansible_host}} state=started delay=15 timeout=300
    #   sudo: false
    #   tags:
    #     - kernel

    # - name: Fixing GRUB order to boot to the right kernel
    #   lineinfile:
    #     path: /etc/default/grub
    #     regexp: '^GRUB_DEFAULT'
    #     line: 'GRUB_DEFAULT=0'
    #   tags:
    #     - kernel

    # - name: Generating GRUB boot config
    #   shell: 'grub2-mkconfig -o /boot/grub2/grub.cfg'
    #   tags:
    #     - kernel

    # - name: Rebooting and waiting for host to come back
    #   shell: sleep 2 && shutdown -r +1
    #   async: 1
    #   poll: 0
    #   sudo: true
    #   ignore_errors: true
    #   tags:
    #     - kernel
    
    # - name: waiting for server to come back
    #   local_action: wait_for host={{ansible_host}} state=started delay=15 timeout=300
    #   sudo: false
    #   tags:
    #     - kernel 

    - name: Installing Basic Tools
      yum:
        name: "{{item}}"
        state: latest
        update_cache: yes
      with_items:
        - yum-utils
        - device-mapper-persistent-data
        - lvm2
        - epel-release
        - git

# All python tasks needed to use the ansible k8s module
# This module allows us to run kubectl apply in automated way
    - name: Install python-pip
      yum:
        name: python-pip
        state: present

    - name: Upgrading python-pip
      pip:
        name: pip
        extra_args: --upgrade

    - name: Upgrading python setuptools
      pip:
        name: setuptools
        extra_args: --upgrade
    
    - name: Installing python openshift client with pip
      pip:
        name: openshift
        extra_args: --ignore-installed

    - name: Add Docker Repo
      get_url:
        url: https://download.docker.com/linux/centos/docker-ce.repo
        dest: /etc/yum.repos.d/

    - name: Install Docker CE
      yum:
        name: docker-ce-18.06.1.ce
        state: present

    - name: Enable and Start Docker Service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Insert user vagrant in docker group
      become: true
      shell: "usermod -aG docker vagrant"

    - name: Disable Swap
      shell: "swapoff -a"

    - name: Add Kubernetes Repo
      copy:
        dest: "/etc/yum.repos.d/kubernetes.repo"
        content: |
          [kubernetes]
          name=Kubernetes
          baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
          enabled=1
          gpgcheck=1
          repo_gpgcheck=1
          gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

    - name: Disable SELinux
      shell: |
        setenforce 0
        sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config

    - name: Install Kubelet
      yum:
        name: kubelet
        state: present    

    - name: Install Kubeadm
      yum:
        name: kubeadm
        state: present
     
    - name: Install Kubectl
      yum:
        name: kubelet
        state: present
    # - name: Configure node ip
    #   lineinfile:
    #     path: //etc/sysconfig/kubelet
    #     line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}

    - name: Enable and Start Kubelet
      systemd:
        name: kubelet
        state: started
        enabled: yes
    - name: Set Net Bridge Parameters IPv6
      sysctl:
        name: net.bridge.bridge-nf-call-ip6tables
        value: 1
        sysctl_file: /etc/sysctl.d/k8s.conf
    - name: Set Net Bridge Parameters IPv4
      sysctl:
        name: net.bridge.bridge-nf-call-iptables
        value: 1
        sysctl_file: /etc/sysctl.d/k8s.conf
        reload: yes